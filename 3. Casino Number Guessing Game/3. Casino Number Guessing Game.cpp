#include <iostream>
#include <cstdlib>
#include <string>
using namespace std;
enum enDifficulty {EASY,MEDIUM ,HARD};
struct stCasino 
{
    string PlayerName;
     int PlayerBalance=0;
    int Theamountyoubet=0;
    short UserChoice=0;
    short ComputerChoice=0;
    enDifficulty Defficulty=enDifficulty::EASY;
    bool userWin=true;   
};
 void Welcomemessag()
{
    cout << "\t\t========================================================\n\n";
    
    cout << "\t\t        W e l c o m e   A t   O u r   C a s i n o       \n\n";
    
    cout << "\t\t========================================================\n\n";

}
 void GameRules()
 {
     cout << "\t\t At This Game \n\n";

     cout << "\t\t player needs to guess a random number generated by the computer.\n\n";

     cout << "\t\t If the player guesses right, they will win a certain amount of money.\n\n";

     cout << "\t\t The winning prize depends on the difficulty of the game.\n\n";
 
     cout << "\t\t If you win easy Level The amount you bet you will earn . \n\n";
 
     cout << "\t\t If you win Medium Level The amount you bet you will earn  3 times . \n\n";
 
     cout << "\t\t If you win Hard Level The amount you bet you will earn  5 times .\n\n";
 }
 void endMessage(string name,bool a)
 {
     if (a)
     {
         cout << "\t\t========================================================\n\n";

         cout << "\t\t  C o n g r a t u l a t i o n      "<<name<<"  \n\n";

         cout << "\t\t========================================================\n\n";


     }
     else
     {

         cout << "\t\t========================================================\n\n";
          
         cout << "\t\t  B e t t e r   l u c k   n e x t   t i m e ,  " << name << "  \n\n";

         cout << "\t\t========================================================\n\n";

     }


 }
 string  ReadUserName()
 {
     string name; 
     cout << "Enter Your Name Please ? \n";
     getline(cin, name);
     return name;
 }
 int PlayerBalance()
 {
     int b;
     cout << "Enter You Balance ? \n\n";
     cin >> b;
     while (b<0||b==0)
     {
         cout << "ERROR You Should Enter  Possitive Integer \n";
         cin >> b;
     }
     return b;
 }
 enDifficulty ReadDefficulty()
 {
     short Def;
     cout << "The Difficulty of The Game \n\n";
     cout << "Easy   [1] ^_^  \"You Should Expect Number from 1 to 10 \"  \n\n";
     cout << "Medium [2] :)   \"You Should Expect Number from 10 to 50 \" \n\n";
     cout << "Hard   [3] :-(  \"You Should Expect Number from 50 to 100 \"  \n\n";
     cout << "Enter The Difficulty of The Game \n\n";
     cin >> Def;
     while (Def<1 || Def>3)
     {
         cout << "ERROR You Should Enter  a correct Level of Difficulty \n";
         cin >> Def;
     }
     return(enDifficulty) (Def-1);
 }
 int Theamountyoubet(int balance)
 {
     int b;
     cout << "Enter The amount you Will bet ? \n\n";
     cin >> b;
     while (b > balance)
     {
         cout << "You Dosen't Have  enough money !!\n";
         cin >> b;
     }
     return b;
 }
 short CreataRandomNumber(short to ,short from)
 {
     return (rand() % (to - from + 1) + from);
 }
 short ComputerChoice(enDifficulty Dif)
 {
     switch (Dif)
     {
     case EASY:
         return CreataRandomNumber(1, 10);
     case MEDIUM:
         return CreataRandomNumber(10, 50);
     case HARD:
         return CreataRandomNumber(50, 100);
     }
 }
 string TheRangeofnumbers(enDifficulty Dif)
 {
     switch (Dif)
     {
     case EASY:
         return " Guess Number From 1 to 10 ";
     case MEDIUM:
         return " Guess Number From 10 to 50 ";
     case HARD:
         return " Guess Number From 50 to 100 ";
     }
 }
 bool ChekUserChoicerange(short num,enDifficulty Dif)
 {
     switch (Dif)
     {
     case EASY:
         if (num>=1&&num<=10)
         {
             return true;
         }
         else 
         {
             return false;
         }
     case MEDIUM:

         if (num >= 10 && num <= 50)
         {
             return true;
         }
         else
         {
             return false;
         }
     case HARD:
         if (num >= 50 && num <= 100)
         {
             return true;
         }
         else
         {
             return false;
         }
     }
 }
 short UserChoice(enDifficulty Dif)
 {
     short Num;
     cout << "\n" << TheRangeofnumbers(Dif);
     cin >> Num;
     while (!ChekUserChoicerange(Num,Dif))
     {
         cout << "You Should Enter a Number at that Rang :  \n";
         cout << "\n" << TheRangeofnumbers(Dif);
         cin >> Num;
     }

     return Num;
 
 }
 bool DetermineWinner(short numuser, short comp)
 {
     return(numuser == comp);
 }
 int NewUserBalance(bool res, enDifficulty Dif,int blance ,int amountex)
 {
     if (res)
     {
         cout << "\nYou Win !!!\n";
         system("color 2F");
         switch (Dif)
         {
         case EASY:     
             blance = (blance + amountex);
                 return blance;
         case MEDIUM:

             blance = (blance + (amountex*3));
             return blance;
         case HARD:
             blance = (blance + (amountex * 5));
             return blance;
         }

     }
     else {
         cout << "\nYou Lose :( \n";
         system("color 4F");
         blance = (blance -amountex);
         return blance;

     }

 }
 void PrintYourBalance(int num)
 {
     cout << "\t\t========================================================\n\n";

     cout << "\t\t Y o u ' r    B a l a n c e    =  "<<num<<"   \n\n";

     cout << "\t\t========================================================\n\n";
 }
 void Cazino()
 {
     short tryagain = 1;
     stCasino casino;

         Welcomemessag();
         GameRules();
         
         casino.PlayerName = ReadUserName();
         
         casino.PlayerBalance = PlayerBalance();
     
         do
         { 
             if (casino.PlayerBalance==0)
         {
                 cout << "\n\nYou Don't Have Money Please Earn Money and Play again . \n";
                 break;
         }
         casino.Theamountyoubet = Theamountyoubet(casino.PlayerBalance);
 
        

         casino.Defficulty = ReadDefficulty();

         casino.ComputerChoice = ComputerChoice(casino.Defficulty);

         casino.UserChoice = UserChoice(casino.Defficulty);

         casino.userWin = DetermineWinner(casino.UserChoice, casino.ComputerChoice);

         casino.PlayerBalance = NewUserBalance(casino.userWin, casino.Defficulty, casino.PlayerBalance, casino.Theamountyoubet);

         PrintYourBalance(casino.PlayerBalance);

         endMessage(casino.PlayerName, casino.userWin);

         do
         {
         cout << "\n\nYou Want to Play again[1]or[0] ?? \n";
         cin >> tryagain;

         } while (tryagain<0 ||tryagain>1);
 
         
         
         } while (tryagain==1);
                   
 }
 int main()
{

     Cazino();




    return 0;
}
